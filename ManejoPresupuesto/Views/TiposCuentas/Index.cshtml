@* va a ocupar un Inumerable de Tipo cuenta*@
@model IEnumerable<TipoCuenta>
@{
    ViewData["Title"] = "Tipos Cuentas";
}

<h1>Tipos de Cuentas</h1>
<h5>El tipo de cuenta se refiere a como podemos agrupar cuentas. Ejemplos: prestamos,tarjetas de credito, etc.</h5>
<a asp-action="Crear" class="btn btn-primary mb-3">Crear nuevo</a>
<table class="table">
    <thead>
        <tr>
            <th>Acciones</th>
            <th>Nombre</th>
        </tr>
    </thead>
    <tbody id="reordenable">
        @foreach(var tipoCuenta in Model)
        {
            <tr>
                <td>
                    @*Obtiene los id de cada uno de ellos para poder ocuparlos, esto se hace de manera implicita*@
                    <input type="hidden" value="@tipoCuenta.Id" class="ids">
                    <a class="btn btn-primary" asp-action="Editar" asp-route-id="@tipoCuenta.Id">Editar</a>
                    <a class="btn btn-danger" asp-action="Borrar" asp-route-id="@tipoCuenta.Id">Borrar</a>
                </td>
                <td>
                    @tipoCuenta.Nombre
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts{
    <script>

        @*enviar una solicitud al servidor cuando se realiza un reordenamiento.*@
        const urlOrdenar = '@Url.Action("ordenar")';

        $(function(){
            @*Aqui lo que ocupa es el sortable para llamar lo que viene desde la libreria desde el layout*@
                $("#reordenable").sortable({
                @*Cuando se detenga de mover lo actualiza de manera implicita*@
                    stop: async function (e, ui) {
                        await actualizarOrdendes();
                    }
                });
            async function actualizarOrdendes() {
                const ids = obtenerIdsDeElementos();
                await enviarIdsAlBackend(ids);
            }
            function obtenerIdsDeElementos() {
                const ids = $(".ids").map(function () {
                    return $(this).val();
                }).get();
                return ids;
            }
            async function enviarIdsAlBackend(ids) {
                var data = JSON.stringify(ids);
                await fetch(urlOrdenar, {
                    method: "POST",
                    body: data,
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
            }
        })
    </script>
}